definitions:
  dto.Doctor:
    properties:
      id:
        type: integer
      role:
        type: string
      speciality:
        type: string
      surname:
        type: string
      tokenId:
        type: string
    type: object
  httputil.HTTPError:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: status bad request
        type: string
    type: object
info:
  contact: {}
paths:
  /doctors/{id}:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: Doctor ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Doctor'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Show a Doctor
      tags:
      - doctors
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
